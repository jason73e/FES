@model fes.Models.FieldsViewModel
@using PagedList.Mvc;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />

@{
    ViewBag.Title = "Field Listing";
}

<h2>Field Listing</h2>

<p>
    @Html.ActionLink("Create New", "Create")
</p>


@using (Html.BeginForm("Index", "Fields", FormMethod.Get))
{
    <table class="table">
        <tr>
            <td>
                <label class="form-control-static">File Version:</label>
            </td>
            <td>
                @Html.DropDownListFor(model => model.SearchFileVersion, Model.slFileVersions, "- Select a File Version -", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.SearchFileVersion, "", new { @class = "text-danger" })
            </td>
            <td>
                <label class="form-control-static">Claim Type:</label>
            </td>
            <td>@Html.EnumDropDownListFor(model => model.SearchClaimLayout,"- Select a Claim Type -", htmlAttributes: new { @class = "form-control" })</td>
            <td></td>
            </tr>
        <tr>
            <td><label class="form-control-static">Record Type:</label></td>
            <td>@Html.EnumDropDownListFor(model => model.SearchRecordType, "- Select a Record Type -", htmlAttributes: new { @class = "form-control" })</td>
            <td><label class="form-control-static">Grouping:</label></td>
            <td>@Html.EnumDropDownListFor(model => model.SearchFormGrouping, "- Select a Form Group -", htmlAttributes: new { @class = "form-control" })</td>
            <td>
                <input type="submit" value="Search" class="btn btn-primary" />
            </td>
        </tr>
    </table>
    <label class="form-control-static">Page @(Model.lsFields.PageCount < Model.lsFields.PageNumber ? 0 : Model.lsFields.PageNumber) of @Model.lsFields.PageCount</label>
    <p>
        <label class="form-control-static">Records Per Page: </label>@Html.DropDownList("PageSize", new SelectList(new Dictionary<string, int> { { "10", 10 }, { "20", 20 }, { "50", 50 }, { "100", 100 } }, "Key", "Value", Model.lsFields.PageSize), new { @class = "pro_pag_tf1", id = "pagesizelist", @onchange = "this.form.submit();" })
    </p>

}
@Html.PagedListPager(Model.lsFields, page => Url.Action("Index", new { page, sCurrentFileVersion = ViewBag.FileVersion,sCurrentClaimLayout = ViewBag.ClaimLayout, sCurrentRecordType = ViewBag.RecordType, sCurrentFormGrouping=ViewBag.FormGrouping, PageSize = ViewBag.PageSize }))


<table class="table-striped table-bordered">
    <tbody>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.lsFields.FirstOrDefault().Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.lsFields.FirstOrDefault().Description)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.lsFields.FirstOrDefault().DisplayName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.lsFields.FirstOrDefault().PseudoCode)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.lsFields.FirstOrDefault().FileVersion)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.lsFields.FirstOrDefault().RecordType)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.lsFields.FirstOrDefault().ClaimType)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.lsFields.FirstOrDefault().FormGroup)
            </th>
            <th></th>
        </tr>
        @if (Model.lsFields.Count > 0)
        {
            foreach (var item in Model.lsFields)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Description)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.DisplayName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.PseudoCode)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.FileVersion)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.RecordType)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.ClaimType)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.FormGroup)
                    </td>
                    <td>
                        @Html.ActionLink("Edit", "Edit", new { id = item.FieldID }) |
                        @Html.ActionLink("Details", "Details", new { id = item.FieldID }) |
                        @Html.ActionLink("Delete", "Delete", new { id = item.FieldID })
                    </td>
                </tr>
            }
        }
        else
        {
            <tr>
                <td colspan="9">There are no Fields matching this search.</td>
            </tr>

        }
    </tbody>
</table>
