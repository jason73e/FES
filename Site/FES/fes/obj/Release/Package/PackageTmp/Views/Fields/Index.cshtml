@model fes.Models.FieldsViewModel
@using PagedList.Mvc;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />

@{
    ViewBag.Title = "Field Listing";
}
<div id="divLoading" style="margin: 0px; padding: 0px; position: fixed; right: 0px;
    top: 0px; width: 100%; height: 100%; background-color: #666666; z-index: 30001;
    opacity: .8; filter: alpha(opacity=70);display:none">
    <p style="position: absolute; top: 30%; left: 45%; color: White;">
        Loading, please wait...<img src="../../Content/themes/base/images/ajax-loading.gif">
    </p>
</div>

<h2>Field Listing</h2>

<p>
    @Html.ActionLink("Create New", "Create")
</p>


    <table class="table">
        <tr>
            <td><label class="form-control-static">Field Name:</label></td>
            <td>@Html.TextBoxFor(model => model.SearchName, new { @class = "form-control" }) </td>
            <td colspan="2">This will match text in Name or DisplayName.</td>
        </tr>
        <tr>
            <td>
                <label class="form-control-static">File Version:</label>
            </td>
            <td>
                @Html.DropDownListFor(model => model.SearchFileVersion, Model.slFileVersions, "- Select a File Version -", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.SearchFileVersion, "", new { @class = "text-danger" })
            </td>
            <td>
                <label class="form-control-static">Claim Type:</label>
            </td>
            <td>@Html.EnumDropDownListFor(model => model.SearchClaimLayout, "- Select a Claim Type -", htmlAttributes: new { @class = "form-control" })</td>
            <td></td>
            </tr>
        <tr>
            <td><label class="form-control-static">Record Type:</label></td>
            <td>@Html.EnumDropDownListFor(model => model.SearchRecordType, "- Select a Record Type -", htmlAttributes: new { @class = "form-control" })</td>
            <td><label class="form-control-static">Grouping:</label></td>
            <td>@Html.EnumDropDownListFor(model => model.SearchFormGrouping, "- Select a Form Group -", htmlAttributes: new { @class = "form-control" })</td>
            <td>
                <input type="submit" id="process" value="Search" class="btn btn-primary" />
            </td>
        </tr>
    </table>

<div id="FieldList">
    @Html.Partial("FieldList", Model.lsFields)
</div>


@section Scripts {

<script type="text/javascript">
        // Adding popstate event listener to handle browser back button
        window.addEventListener("popstate", function (e) {
            $.ajax({
                url: location.href,
                success: function (result) {
                    $('#FieldList').html(result);
                }
            });
        });

        function ChangeUrl(page, url) {
            if (typeof (history.pushState) != "undefined") {
                var obj = { Page: page, Url: url };
                history.pushState(null, obj.Page, obj.Url);
            } else {
                alert("Browser does not support HTML5.");
            }
        }

        function getUrlVars() {
            var vars = [], hash;
            var hashes = window.location.href.slice(window.location.href.indexOf('?') + 1).split('&');
            for (var i = 0; i < hashes.length; i++) {
                hash = hashes[i].split('=');
                vars.push(hash[0]);
                vars[hash[0]] = hash[1];
            }
            return vars;
        }

        function BuildQS() {
            var qs = "SearchName=" + $('#SearchName').val() + "&SearchFileVersion=" + $('#SearchFileVersion').val() + "&SearchClaimLayout=" + $('#SearchClaimLayout').val() + "&SearchRecordType=" + $('#SearchRecordType').val() + "&SearchFormGrouping=" + $('#SearchFormGrouping').val() + "&PageSize=" + $('#pagesizelist').val() + "&sortOption=" + $('#sortOption').val();
            return qs;
        }


        function search() {
            $("#divLoading").show();
            var url = '/Fields/Index?' + BuildQS();
            $.ajax({
                url: url,
                success: function (result) {                    
                    ChangeUrl("index", url);
                    $('#FieldList').html(result);
                    $("#divLoading").hide();
                },
                error: function (err) {
                    $("#divLoading").hide();
                }
            });
        }

        $(function() {
            $("#process").click(function () {
                search();
            });

            $("#SearchString").keypress(function(e) {
                if (e.keyCode == 13) {
                    search();
                }
            });
            $('body').on('click', '#FieldList .pagination a', function (event) {
                $("#divLoading").show();
                event.preventDefault();
                console.log('page');
                var url = $(this).attr('href')
                console.log(url);
                $.ajax({
                    url: url,
                    success: function(result) {
                        ChangeUrl('index', url);
                        $('#FieldList').html(result);
                        $("#divLoading").hide();
                    },
                    error: function (err) {
                        $("#divLoading").hide();
                    }
                });
            });


            $('body').on('change', '#pagesizelist', function (event) {
                $("#divLoading").show();
                event.preventDefault();
                console.log('page');
                var url = '/Fields/Index?' + BuildQS();
                console.log(url);
                $.ajax({
                    url: url,
                    success: function (result) {
                        ChangeUrl('index', url);
                        $('#FieldList').html(result);
                        $("#divLoading").hide();
                    },
                    error: function (err) {
                        $("#divLoading").hide();
                    }
                });
            });
            


            $('body').on('click', '#FieldList .table-striped th a', function (event) {
                $("#divLoading").show();
                event.preventDefault();
                
                var columnToSort = $(this).text();
                var currentSortOption = getUrlVars()['sortOption'];
                console.log(currentSortOption);
                var sort;
                switch (currentSortOption) {
                    case "name_acs":
                        sort = 'name_desc';
                        break;
                    case "name_desc":
                        sort = 'name_acs';
                        break;
                    case "description_acs":
                        sort = 'description_desc';
                        break;
                    case "description_desc":
                        sort = 'description_acs';
                        break;
                    case "displayname_acs":
                        sort = 'displayname_desc';
                        break;
                    case "displayname_desc":
                        sort = 'displayname_acs';
                        break;
                    case "pseudocode_acs":
                        sort = 'pseudocode_desc';
                        break;
                    case "pseudocode_desc":
                        sort = 'pseudocode_acs';
                        break;
                    case "fileversion_acs":
                        sort = 'fileversion_desc';
                        break;
                    case "fileversion_desc":
                        sort = 'fileversion_acs';
                        break;
                    case "recordtype_acs":
                        sort = 'recordtype_desc';
                        break;
                    case "recordtype_desc":
                        sort = 'recordtype_acs';
                        break;
                    case "claimtype_acs":
                        sort = 'claimtype_desc';
                        break;
                    case "claimtype_desc":
                        sort = 'claimtype_acs';
                        break;
                    case "formgroup_acs":
                        sort = 'formgroup_desc';
                        break;
                    case "formgroup_desc":
                        sort = 'formgroup_acs';
                        break;
                    default:
                        sort = '';
                        break;
                }


                switch (columnToSort) {
                    case 'Name':
                        if (currentSortOption != 'name_acs' && currentSortOption != 'name_desc') {
                            sort = 'name_acs';
                        }
                        break;
                    case 'Description':
                        if (currentSortOption != 'description_acs' && currentSortOption != 'description_desc') {
                            sort = 'description_acs';
                        }
                        break;
                    case 'DisplayName':
                        if (currentSortOption != 'displayname_acs' && currentSortOption != 'displayname_decs') {
                            sort = 'displayname_acs';
                        }
                        break;
                    case 'PseudoCode':
                        if (currentSortOption != 'pseudocode_acs' && currentSortOption != 'pseudocode_decs') {
                            sort = 'pseudocode_acs';
                        }
                        break;
                    case 'FileVersion':
                        if (currentSortOption != 'fileversion_acs' && currentSortOption != 'fileversion_decs') {
                            sort = 'fileversion_acs';
                        }
                        break;
                    case 'RecordType':
                        if (currentSortOption != 'recordtype_acs' && currentSortOption != 'recordtype_decs') {
                            sort = 'recordtype_acs';
                        }
                        break;
                    case 'ClaimType':
                        if (currentSortOption != 'claimtype_acs' && currentSortOption != 'claimtype_decs') {
                            sort = 'claimtype_acs';
                        }
                        break;
                    case 'FormGroup':
                        if (currentSortOption != 'formgroup_acs' && currentSortOption != 'formgroup_decs') {
                            sort = 'formgroup_acs';
                        }
                        break;
                    default:
                        sort = '';
                        break;

                }
                $('#sortOption').val(sort);
                var url = '/Fields/Index?' + BuildQS();
                $.ajax({
                    url: url,
                    success: function(result) {
                        ChangeUrl('index', url);
                        $('#FieldList').html(result);
                        $("#divLoading").hide();
                    },
                    error: function (err) {
                        $("#divLoading").hide();
                    }
                });
            });

        });

</script>

}